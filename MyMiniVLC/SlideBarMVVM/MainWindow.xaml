<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:SlideBarMVVM"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" mc:Ignorable="d" x:Class="SlideBarMVVM.MainWindow"
        Title="Windows Media PLayer 2" Height="680.5" Width="1013.5" Background="{x:Null}" x:Name="WMPWindow" MinWidth="500" MinHeight="400">
    <Window.Resources>
    	<local:MediaPlayerViewModel x:Key="ViewModelDataSource" d:IsDataSource="True" />
    	<local:LibraryViewModel x:Key="ViewModelLibrary" d:IsDataSource="True" />

        <!-- *********************** Linear Gradient Brush *********************** -->
		<LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
    		<GradientStop Color="white" Offset="0"/>
    		<GradientStop Color="#B8E2F9" Offset="0.5"/>
    		<GradientStop Color="#B0DFF8" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
    		<GradientStop Color="#B8E4FA" Offset="0.25"/>
    		<GradientStop Color="#5EB4E3" Offset="0.5"/>
    		<GradientStop Color="#4C8BB4" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="0,1">
    		<GradientStop Color="White" Offset="0"/>
    		<GradientStop Color="#F0EFEF" Offset="0.4"/>
    		<GradientStop Color="#D6D5D5" Offset=".8"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="HorizontalSliderThumbHoverBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="white" Offset="0"/>
    		<GradientStop Color="#B8E2F9" Offset="0.5"/>
    		<GradientStop Color="#B0DFF8" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="HorizontalSliderThumbPressedBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#B8E4FA" Offset="0.25"/>
    		<GradientStop Color="#5EB4E3" Offset="0.5"/>
    		<GradientStop Color="#4C8BB4" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="HorizontalSliderThumbNormalBackground" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="White" Offset="0"/>
    		<GradientStop Color="#F0EFEF" Offset="0.4"/>
    		<GradientStop Color="#D6D5D5" Offset=".8"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
    		<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
    		<GradientStop Color="White" Offset=".9"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="VerticalSliderThumbHoverBackground" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="white" Offset="0"/>
    		<GradientStop Color="#B8E2F9" Offset="0.5"/>
    		<GradientStop Color="#B0DFF8" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="VerticalSliderThumbPressedBackground" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#B8E4FA" Offset="0.25"/>
    		<GradientStop Color="#5EB4E3" Offset="0.5"/>
    		<GradientStop Color="#4C8BB4" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="VerticalSliderThumbNormalBackground" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="White" Offset="0"/>
    		<GradientStop Color="#F0EFEF" Offset="0.4"/>
    		<GradientStop Color="#D6D5D5" Offset=".8"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="VerticalSliderThumbHoverBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
    		<GradientStop Color="white" Offset="0"/>
    		<GradientStop Color="#B8E2F9" Offset="0.5"/>
    		<GradientStop Color="#B0DFF8" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="VerticalSliderThumbPressedBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
    		<GradientStop Color="#B8E4FA" Offset="0.25"/>
    		<GradientStop Color="#5EB4E3" Offset="0.5"/>
    		<GradientStop Color="#4C8BB4" Offset="1"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="VerticalSliderThumbNormalBackgroundInverted" EndPoint="0,0" StartPoint="1,0">
    		<GradientStop Color="White" Offset="0"/>
    		<GradientStop Color="#F0EFEF" Offset="0.4"/>
    		<GradientStop Color="#D6D5D5" Offset=".8"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="VerticalSliderTrackNormalBorder" EndPoint="1,0" StartPoint="0,0">
    		<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
    		<GradientStop Color="White" Offset=".9"/>
    	</LinearGradientBrush>
    	<LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        	<GradientStop Color="#F3F3F3" Offset="0"/>
        	<GradientStop Color="#EBEBEB" Offset="0.5"/>
        	<GradientStop Color="#DDDDDD" Offset="0.5"/>
        	<GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>
        <!-- ******************** Fin de Linear Gradient Brush ******************* -->

        <!-- ************************* Solid Color Brush ************************* -->
		<SolidColorBrush x:Key="HorizontalSliderThumbHoverBorder" Color="#3C7FB1"/>
    	<SolidColorBrush x:Key="HorizontalSliderThumbPressedBorder" Color="#2C628B"/>
    	<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>
		<SolidColorBrush x:Key="ListBorder" Color="#828790"/>
		<SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
        <!-- ********************** Fin de Solid Color Brush ********************* -->

        <!-- ***************************** Geometry ****************************** -->
        <Geometry x:Key="SliderThumbDisabledGeometry">M -5,-10.5 L 5,-10.5 L 5,10.5 L -5,10.5 Z</Geometry>
    	<Geometry x:Key="SliderPointedThumbDisabledGeometry">M 4.5,-8.5 L -4.5,-8.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
    	<Geometry x:Key="SliderPointedThumbOuterBorderGeometry">M 4.5,-7.5 A 1 1 0 0 0 3.5,-8.5 L -3.5,-8.5 A 1 1 0 0 0 -4.5,-7.5 L -4.5,4.5 L -0.5,8.5 L 0.5,8.5 L 4.5,4.5 Z</Geometry>
    	<Geometry x:Key="SliderPointedThumbMiddleBorderGeometry">M 3.5,-7.5 L -3.5,-7.5 L -3.5,4.5 L 0,8 L 3.5,4.5 Z</Geometry>
        <Geometry x:Key="SliderThumbOuterBorderGeometry">M -5,-9.5 A 1 1 0 0 1 -4,-10.5 L 4,-10.5 A 1 1 0 0 1 5,-9.5 L 5,9.5 A 1 1 0 0 1 4,10.5 L -4,10.5 A 1 1 0 0 1 -5,9.5 Z</Geometry>
    	<Geometry x:Key="SliderThumbMiddleBorderGeometry">M -4,-9.5 L 4,-9.5 L 4,9.5 L -4,9.5 Z</Geometry>
        <!-- ************************** Fin de Geometry ************************** -->


        <!-- ****************************** Style ******************************** -->
        <Style x:Key="SpecialSliderStyle" TargetType="{x:Type local:SpecialSlider}">
    		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="Foreground" Value="#FFC4C4C4"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type local:SpecialSlider}">
    					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    						<Grid>
    							<Grid.RowDefinitions>
    								<RowDefinition Height="Auto"/>
    								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
    								<RowDefinition Height="Auto"/>
    							</Grid.RowDefinitions>
    							<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
    							<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
    							<Border x:Name="TrackBackground" BorderThickness="1" Background="#FFE7EAEA" CornerRadius="1" Height="4" Margin="5,0" Grid.Row="1" VerticalAlignment="Center">
    								<Border.BorderBrush>
    									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    										<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
    										<GradientStop Color="White" Offset="0.9"/>
    									</LinearGradientBrush>
    								</Border.BorderBrush>
    								<Canvas Margin="-6,-1">
    									<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Visibility="Hidden"/>
    								</Canvas>
    							</Border>
    							<Track x:Name="PART_Track" Grid.Row="1">
    								<Track.DecreaseRepeatButton>
    									<RepeatButton Command="Slider.DecreaseLarge" Background="{x:Null}" Foreground="{x:Null}" BorderBrush="{x:Null}">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Rectangle RadiusX="1" RadiusY="1" Height="2.8" Margin="6,0,0,0" StrokeThickness="1">
    																<Rectangle.Fill>
    																	<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    																		<GradientStop Color="Black" Offset="1"/>
    																		<GradientStop Color="#FF878787" Offset="0"/>
    																	</LinearGradientBrush>
    																</Rectangle.Fill>
    															</Rectangle>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.DecreaseRepeatButton>
    								<Track.IncreaseRepeatButton>
    									<RepeatButton Command="Slider.IncreaseLarge" Background="{x:Null}" Foreground="{x:Null}">
    										<RepeatButton.Style>
    											<Style TargetType="{x:Type RepeatButton}">
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="IsTabStop" Value="False"/>
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Rectangle Fill="Transparent"/>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb x:Name="Thumb">
    										<Thumb.Style>
    											<Style TargetType="{x:Type Thumb}">
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="Height" Value="22"/>
    												<Setter Property="Width" Value="11"/>
    												<Setter Property="Foreground" Value="Gray"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type Thumb}">
    															<Canvas SnapsToDevicePixels="True">
    																<Canvas.RenderTransform>
    																	<TranslateTransform X="5.5" Y="11"/>
    																</Canvas.RenderTransform>
    																<Ellipse Height="14" Canvas.Left="-7" Canvas.Top="-6.993" Width="14">
    																	<Ellipse.Stroke>
    																		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    																			<GradientStop Color="Black" Offset="0"/>
    																			<GradientStop Color="White" Offset="1"/>
    																		</LinearGradientBrush>
    																	</Ellipse.Stroke>
    																	<Ellipse.Fill>
    																		<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
    																			<GradientStop Color="#FF878787" Offset="0"/>
    																			<GradientStop Color="Black" Offset="1"/>
    																			<GradientStop Color="#FF878787" Offset="1"/>
    																		</LinearGradientBrush>
    																	</Ellipse.Fill>
    																</Ellipse>
    															</Canvas>
    															<ControlTemplate.Triggers>
    																<Trigger Property="IsMouseOver" Value="True"/>
    																<Trigger Property="Foreground" Value="Blue"/>
    																<Trigger Property="IsDragging" Value="True"/>
    																<Trigger Property="IsEnabled" Value="False"/>
    															</ControlTemplate.Triggers>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</Thumb.Style>
    									</Thumb>
    								</Track.Thumb>
    							</Track>
    						</Grid>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="TickPlacement" Value="TopLeft">
    							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    							<Setter Property="Style" TargetName="Thumb">
    								<Setter.Value>
    									<Style TargetType="{x:Type Thumb}">
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Height" Value="18"/>
    										<Setter Property="Width" Value="10"/>
    										<Setter Property="Foreground" Value="Gray"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type Thumb}">
    													<Canvas SnapsToDevicePixels="True">
    														<Canvas.RenderTransform>
    															<TransformGroup>
    																<RotateTransform Angle="180"/>
    																<TranslateTransform X="5" Y="9"/>
    															</TransformGroup>
    														</Canvas.RenderTransform>
    														<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
    															<Path.Fill>
    																<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
    																	<GradientStop Color="White" Offset="0"/>
    																	<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
    																	<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
    																</LinearGradientBrush>
    															</Path.Fill>
    														</Path>
    														<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
    														<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
    													</Canvas>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Background">
    																<Setter.Value>
    																	<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
    																		<GradientStop Color="White" Offset="0"/>
    																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																	</LinearGradientBrush>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    														</Trigger>
    														<Trigger Property="Foreground" Value="Blue">
    															<Setter Property="Fill" TargetName="Background">
    																<Setter.Value>
    																	<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
    																		<GradientStop Color="White" Offset="0"/>
    																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																	</LinearGradientBrush>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    														</Trigger>
    														<Trigger Property="IsDragging" Value="True">
    															<Setter Property="Fill" TargetName="Background">
    																<Setter.Value>
    																	<LinearGradientBrush EndPoint="0,0" StartPoint="0,1">
    																		<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
    																		<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
    																		<GradientStop Color="#FF4C8BB4" Offset="1"/>
    																	</LinearGradientBrush>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    															<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    															<Setter Property="Data" TargetName="OuterBorder" Value="M-5,-10.5L5,-10.5 5,10.5 -5,10.5z"/>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    															<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</Setter.Value>
    							</Setter>
    							<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
    						</Trigger>
    						<Trigger Property="TickPlacement" Value="BottomRight">
    							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    							<Setter Property="Style" TargetName="Thumb">
    								<Setter.Value>
    									<Style TargetType="{x:Type Thumb}">
    										<Setter Property="Focusable" Value="False"/>
    										<Setter Property="OverridesDefaultStyle" Value="True"/>
    										<Setter Property="Height" Value="18"/>
    										<Setter Property="Width" Value="10"/>
    										<Setter Property="Foreground" Value="Gray"/>
    										<Setter Property="Template">
    											<Setter.Value>
    												<ControlTemplate TargetType="{x:Type Thumb}">
    													<Canvas SnapsToDevicePixels="True">
    														<Canvas.RenderTransform>
    															<TranslateTransform X="5" Y="9"/>
    														</Canvas.RenderTransform>
    														<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
    															<Path.Fill>
    																<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																	<GradientStop Color="White" Offset="0"/>
    																	<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
    																	<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
    																</LinearGradientBrush>
    															</Path.Fill>
    														</Path>
    														<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
    														<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
    													</Canvas>
    													<ControlTemplate.Triggers>
    														<Trigger Property="IsMouseOver" Value="True">
    															<Setter Property="Fill" TargetName="Background">
    																<Setter.Value>
    																	<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																		<GradientStop Color="White" Offset="0"/>
    																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																	</LinearGradientBrush>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    														</Trigger>
    														<Trigger Property="Foreground" Value="Blue">
    															<Setter Property="Fill" TargetName="Background">
    																<Setter.Value>
    																	<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																		<GradientStop Color="White" Offset="0"/>
    																		<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																		<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																	</LinearGradientBrush>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    														</Trigger>
    														<Trigger Property="IsDragging" Value="True">
    															<Setter Property="Fill" TargetName="Background">
    																<Setter.Value>
    																	<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    																		<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
    																		<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
    																		<GradientStop Color="#FF4C8BB4" Offset="1"/>
    																	</LinearGradientBrush>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
    														</Trigger>
    														<Trigger Property="IsEnabled" Value="False">
    															<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    															<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    															<Setter Property="Data" TargetName="OuterBorder" Value="M-5,-10.5L5,-10.5 5,10.5 -5,10.5z"/>
    															<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    															<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
    														</Trigger>
    													</ControlTemplate.Triggers>
    												</ControlTemplate>
    											</Setter.Value>
    										</Setter>
    									</Style>
    								</Setter.Value>
    							</Setter>
    							<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
    						</Trigger>
    						<Trigger Property="TickPlacement" Value="Both">
    							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    						</Trigger>
    						<Trigger Property="IsSelectionRangeEnabled" Value="True">
    							<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
    						</Trigger>
    						<Trigger Property="IsKeyboardFocused" Value="True">
    							<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<Trigger Property="Orientation" Value="Vertical">
    				<Setter Property="Template">
    					<Setter.Value>
    						<ControlTemplate TargetType="{x:Type local:SpecialSlider}">
    							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
    								<Grid>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition Width="Auto"/>
    										<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
    										<ColumnDefinition Width="Auto"/>
    									</Grid.ColumnDefinitions>
    									<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
    									<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
    									<Border x:Name="TrackBackground" BorderThickness="1" Background="#FFE7EAEA" Grid.Column="1" CornerRadius="1" HorizontalAlignment="Center" Margin="0,5" Width="4">
    										<Border.BorderBrush>
    											<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    												<GradientStop Color="#FFAEB1AF" Offset="0.1"/>
    												<GradientStop Color="White" Offset="0.9"/>
    											</LinearGradientBrush>
    										</Border.BorderBrush>
    										<Canvas Margin="-1,-6">
    											<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1" Visibility="Hidden" Width="4"/>
    										</Canvas>
    									</Border>
    									<Track x:Name="PART_Track" Grid.Column="1">
    										<Track.DecreaseRepeatButton>
    											<RepeatButton Command="Slider.DecreaseLarge">
    												<RepeatButton.Style>
    													<Style TargetType="{x:Type RepeatButton}">
    														<Setter Property="OverridesDefaultStyle" Value="True"/>
    														<Setter Property="IsTabStop" Value="False"/>
    														<Setter Property="Focusable" Value="False"/>
    														<Setter Property="Template">
    															<Setter.Value>
    																<ControlTemplate TargetType="{x:Type RepeatButton}">
    																	<Rectangle Fill="Transparent"/>
    																</ControlTemplate>
    															</Setter.Value>
    														</Setter>
    													</Style>
    												</RepeatButton.Style>
    											</RepeatButton>
    										</Track.DecreaseRepeatButton>
    										<Track.IncreaseRepeatButton>
    											<RepeatButton Command="Slider.IncreaseLarge">
    												<RepeatButton.Style>
    													<Style TargetType="{x:Type RepeatButton}">
    														<Setter Property="OverridesDefaultStyle" Value="True"/>
    														<Setter Property="IsTabStop" Value="False"/>
    														<Setter Property="Focusable" Value="False"/>
    														<Setter Property="Template">
    															<Setter.Value>
    																<ControlTemplate TargetType="{x:Type RepeatButton}">
    																	<Rectangle Fill="Transparent"/>
    																</ControlTemplate>
    															</Setter.Value>
    														</Setter>
    													</Style>
    												</RepeatButton.Style>
    											</RepeatButton>
    										</Track.IncreaseRepeatButton>
    										<Track.Thumb>
    											<Thumb x:Name="Thumb">
    												<Thumb.Style>
    													<Style TargetType="{x:Type Thumb}">
    														<Setter Property="Focusable" Value="False"/>
    														<Setter Property="OverridesDefaultStyle" Value="True"/>
    														<Setter Property="Height" Value="11"/>
    														<Setter Property="Width" Value="22"/>
    														<Setter Property="Foreground" Value="Gray"/>
    														<Setter Property="Template">
    															<Setter.Value>
    																<ControlTemplate TargetType="{x:Type Thumb}">
    																	<Canvas SnapsToDevicePixels="True">
    																		<Canvas.RenderTransform>
    																			<TransformGroup>
    																				<RotateTransform Angle="90"/>
    																				<TranslateTransform X="11" Y="5.5"/>
    																			</TransformGroup>
    																		</Canvas.RenderTransform>
    																		<Path x:Name="Background" Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z">
    																			<Path.Fill>
    																				<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																					<GradientStop Color="White" Offset="0"/>
    																					<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
    																					<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
    																				</LinearGradientBrush>
    																			</Path.Fill>
    																		</Path>
    																		<Path x:Name="InnerBorder" Data="M-4,-9.5L4,-9.5 4,9.5 -4,9.5z" Stroke="White" StrokeThickness="1"/>
    																		<Path x:Name="OuterBorder" Data="M-5,-9.5A1,1,0,0,1,-4,-10.5L4,-10.5A1,1,0,0,1,5,-9.5L5,9.5A1,1,0,0,1,4,10.5L-4,10.5A1,1,0,0,1,-5,9.5z" Stroke="#FF929292" StrokeThickness="1"/>
    																	</Canvas>
    																	<ControlTemplate.Triggers>
    																		<Trigger Property="IsMouseOver" Value="True">
    																			<Setter Property="Fill" TargetName="Background">
    																				<Setter.Value>
    																					<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																						<GradientStop Color="White" Offset="0"/>
    																						<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																						<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																					</LinearGradientBrush>
    																				</Setter.Value>
    																			</Setter>
    																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    																		</Trigger>
    																		<Trigger Property="Foreground" Value="Blue">
    																			<Setter Property="Fill" TargetName="Background">
    																				<Setter.Value>
    																					<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																						<GradientStop Color="White" Offset="0"/>
    																						<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																						<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																					</LinearGradientBrush>
    																				</Setter.Value>
    																			</Setter>
    																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    																		</Trigger>
    																		<Trigger Property="IsDragging" Value="True">
    																			<Setter Property="Fill" TargetName="Background">
    																				<Setter.Value>
    																					<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																						<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
    																						<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
    																						<GradientStop Color="#FF4C8BB4" Offset="1"/>
    																					</LinearGradientBrush>
    																				</Setter.Value>
    																			</Setter>
    																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
    																		</Trigger>
    																		<Trigger Property="IsEnabled" Value="False">
    																			<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    																			<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    																			<Setter Property="Data" TargetName="OuterBorder" Value="M-5,-10.5L5,-10.5 5,10.5 -5,10.5z"/>
    																			<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    																		</Trigger>
    																	</ControlTemplate.Triggers>
    																</ControlTemplate>
    															</Setter.Value>
    														</Setter>
    													</Style>
    												</Thumb.Style>
    											</Thumb>
    										</Track.Thumb>
    									</Track>
    								</Grid>
    							</Border>
    							<ControlTemplate.Triggers>
    								<Trigger Property="TickPlacement" Value="TopLeft">
    									<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    									<Setter Property="Style" TargetName="Thumb">
    										<Setter.Value>
    											<Style TargetType="{x:Type Thumb}">
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="Height" Value="10"/>
    												<Setter Property="Width" Value="18"/>
    												<Setter Property="Foreground" Value="Gray"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type Thumb}">
    															<Canvas SnapsToDevicePixels="True">
    																<Canvas.RenderTransform>
    																	<TransformGroup>
    																		<RotateTransform Angle="90"/>
    																		<TranslateTransform X="9" Y="5"/>
    																	</TransformGroup>
    																</Canvas.RenderTransform>
    																<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
    																	<Path.Fill>
    																		<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																			<GradientStop Color="White" Offset="0"/>
    																			<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
    																			<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
    																		</LinearGradientBrush>
    																	</Path.Fill>
    																</Path>
    																<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
    																<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
    															</Canvas>
    															<ControlTemplate.Triggers>
    																<Trigger Property="IsMouseOver" Value="True">
    																	<Setter Property="Fill" TargetName="Background">
    																		<Setter.Value>
    																			<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																				<GradientStop Color="White" Offset="0"/>
    																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																			</LinearGradientBrush>
    																		</Setter.Value>
    																	</Setter>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    																</Trigger>
    																<Trigger Property="Foreground" Value="Blue">
    																	<Setter Property="Fill" TargetName="Background">
    																		<Setter.Value>
    																			<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																				<GradientStop Color="White" Offset="0"/>
    																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																			</LinearGradientBrush>
    																		</Setter.Value>
    																	</Setter>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    																</Trigger>
    																<Trigger Property="IsDragging" Value="True">
    																	<Setter Property="Fill" TargetName="Background">
    																		<Setter.Value>
    																			<LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
    																				<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
    																				<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
    																				<GradientStop Color="#FF4C8BB4" Offset="1"/>
    																			</LinearGradientBrush>
    																		</Setter.Value>
    																	</Setter>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
    																</Trigger>
    																<Trigger Property="IsEnabled" Value="False">
    																	<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    																	<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    																	<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    																</Trigger>
    															</ControlTemplate.Triggers>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</Setter.Value>
    									</Setter>
    									<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
    								</Trigger>
    								<Trigger Property="TickPlacement" Value="BottomRight">
    									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    									<Setter Property="Style" TargetName="Thumb">
    										<Setter.Value>
    											<Style TargetType="{x:Type Thumb}">
    												<Setter Property="Focusable" Value="False"/>
    												<Setter Property="OverridesDefaultStyle" Value="True"/>
    												<Setter Property="Height" Value="10"/>
    												<Setter Property="Width" Value="18"/>
    												<Setter Property="Foreground" Value="Gray"/>
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type Thumb}">
    															<Canvas SnapsToDevicePixels="True">
    																<Canvas.RenderTransform>
    																	<TransformGroup>
    																		<RotateTransform Angle="-90"/>
    																		<TranslateTransform X="9" Y="5"/>
    																	</TransformGroup>
    																</Canvas.RenderTransform>
    																<Path x:Name="Background" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z">
    																	<Path.Fill>
    																		<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
    																			<GradientStop Color="White" Offset="0"/>
    																			<GradientStop Color="#FFF0EFEF" Offset="0.4"/>
    																			<GradientStop Color="#FFD6D5D5" Offset="0.8"/>
    																		</LinearGradientBrush>
    																	</Path.Fill>
    																</Path>
    																<Path x:Name="InnerBorder" Data="M3.5,-7.5L-3.5,-7.5 -3.5,4.5 0,8 3.5,4.5z" Stroke="White" StrokeThickness="1"/>
    																<Path x:Name="OuterBorder" Data="M4.5,-7.5A1,1,0,0,0,3.5,-8.5L-3.5,-8.5A1,1,0,0,0,-4.5,-7.5L-4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z" Stroke="#FF929292" StrokeThickness="1"/>
    															</Canvas>
    															<ControlTemplate.Triggers>
    																<Trigger Property="IsMouseOver" Value="True">
    																	<Setter Property="Fill" TargetName="Background">
    																		<Setter.Value>
    																			<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
    																				<GradientStop Color="White" Offset="0"/>
    																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																			</LinearGradientBrush>
    																		</Setter.Value>
    																	</Setter>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    																</Trigger>
    																<Trigger Property="Foreground" Value="Blue">
    																	<Setter Property="Fill" TargetName="Background">
    																		<Setter.Value>
    																			<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
    																				<GradientStop Color="White" Offset="0"/>
    																				<GradientStop Color="#FFB8E2F9" Offset="0.5"/>
    																				<GradientStop Color="#FFB0DFF8" Offset="1"/>
    																			</LinearGradientBrush>
    																		</Setter.Value>
    																	</Setter>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF3C7FB1"/>
    																</Trigger>
    																<Trigger Property="IsDragging" Value="True">
    																	<Setter Property="Fill" TargetName="Background">
    																		<Setter.Value>
    																			<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
    																				<GradientStop Color="#FFB8E4FA" Offset="0.25"/>
    																				<GradientStop Color="#FF5EB4E3" Offset="0.5"/>
    																				<GradientStop Color="#FF4C8BB4" Offset="1"/>
    																			</LinearGradientBrush>
    																		</Setter.Value>
    																	</Setter>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FF2C628B"/>
    																</Trigger>
    																<Trigger Property="IsEnabled" Value="False">
    																	<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    																	<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    																	<Setter Property="Data" TargetName="OuterBorder" Value="M4.5,-8.5L-4.5,-8.5 -4.5,4.5 -0.5,8.5 0.5,8.5 4.5,4.5z"/>
    																	<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    																</Trigger>
    															</ControlTemplate.Triggers>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</Setter.Value>
    									</Setter>
    									<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
    								</Trigger>
    								<Trigger Property="TickPlacement" Value="Both">
    									<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    								</Trigger>
    								<Trigger Property="IsSelectionRangeEnabled" Value="True">
    									<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
    								</Trigger>
    								<Trigger Property="IsKeyboardFocused" Value="True">
    									<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
    								</Trigger>
    							</ControlTemplate.Triggers>
    						</ControlTemplate>
    					</Setter.Value>
    				</Setter>
    			</Trigger>
    		</Style.Triggers>
    	</Style>
    	<Style x:Key="ListViewCustomStyle" TargetType="{x:Type local:ListViewCustom}">
    		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ListBorder}"/>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
    		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
    		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
    		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type local:ListViewCustom}">
    					<ControlTemplate.Resources>
    						<Storyboard x:Key="OnLoaded1" AutoReverse="True" RepeatBehavior="Forever">
    							<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="itemsPresenter">
    								<SplineThicknessKeyFrame KeyTime="0:0:3" Value="-100,0,0,0"/>
    							</ThicknessAnimationUsingKeyFrames>
    						</Storyboard>
    					</ControlTemplate.Resources>
    					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
    						<ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
    							<ItemsPresenter x:Name="itemsPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{DynamicResource ItemsPresenterStyle}" RenderTransformOrigin="0.5,0.5" Margin="0"/>
    						</ScrollViewer>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    						</Trigger>
    						<Trigger Property="IsGrouping" Value="true">
    							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="HorizontalSliderDownThumbStyle" TargetType="{x:Type Thumb}">
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Height" Value="18"/>
    		<Setter Property="Width" Value="10"/>
    		<Setter Property="Foreground" Value="Gray"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Thumb}">
    					<Canvas SnapsToDevicePixels="true">
    						<Canvas.RenderTransform>
    							<TranslateTransform X="5" Y="9"/>
    						</Canvas.RenderTransform>
    						<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackground}"/>
    						<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
    						<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
    					</Canvas>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="Foreground" Value="Blue">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="IsDragging" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    							<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    							<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    							<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
        <Style x:Key="HorizontalSliderUpThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Height" Value="18"/>
            <Setter Property="Width" Value="10"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Canvas SnapsToDevicePixels="true">
                            <Canvas.RenderTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="180"/>
                                            <TranslateTransform X="5" Y="9"/>
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Canvas.RenderTransform>
                            <Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource HorizontalSliderThumbNormalBackgroundInverted}"/>
                            <Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
                            <Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
                        </Canvas>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="Foreground" Value="Blue">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbHoverBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="Background" Value="{StaticResource HorizontalSliderThumbPressedBackgroundInverted}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
                                <Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
                                <Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
                                <Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="3"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>        
		<Style x:Key="HorizontalSliderThumbStyle" TargetType="{x:Type Thumb}">
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Height" Value="22"/>
    		<Setter Property="Width" Value="11"/>
    		<Setter Property="Foreground" Value="Gray"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Thumb}">
    					<Canvas x:Name="canvas" SnapsToDevicePixels="true" RenderTransformOrigin="0.5,0.5">
    						<Canvas.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform/>
    								<TranslateTransform Y="0"/>
    							</TransformGroup>
    						</Canvas.RenderTransform>
    						<VisualStateManager.VisualStateGroups>
    							<VisualStateGroup x:Name="CommonStates">
    								<VisualState x:Name="Normal">
    									<Storyboard>
    										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="ellipse">
    											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}"/>
    										</ObjectAnimationUsingKeyFrames>
    										<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="ellipse">
    											<EasingColorKeyFrame KeyTime="0" Value="Red"/>
    										</ColorAnimationUsingKeyFrames>
    									</Storyboard>
    								</VisualState>
    								<VisualState x:Name="MouseOver"/>
    								<VisualState x:Name="Pressed"/>
    								<VisualState x:Name="Disabled"/>
    							</VisualStateGroup>
    						</VisualStateManager.VisualStateGroups>
    						<Ellipse x:Name="ellipse" Height="{Binding ActualWidth, ElementName=canvas, Mode=OneWay}" Stroke="#FF929292" Width="{Binding ActualWidth, ElementName=canvas, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0" Canvas.Left="0" Canvas.Top="6" Panel.ZIndex="2">
    							<Ellipse.Fill>
    								<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    									<GradientStop Color="Black" Offset="0"/>
    									<GradientStop Color="Red" Offset="1"/>
    								</LinearGradientBrush>
    							</Ellipse.Fill>
    						</Ellipse>
    					</Canvas>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true"/>
    						<Trigger Property="Foreground" Value="Blue"/>
    						<Trigger Property="IsDragging" Value="true"/>
    						<Trigger Property="IsEnabled" Value="false"/>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="VerticalSliderLeftThumbStyle" TargetType="{x:Type Thumb}">
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Height" Value="10"/>
    		<Setter Property="Width" Value="18"/>
    		<Setter Property="Foreground" Value="Gray"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Thumb}">
    					<Canvas SnapsToDevicePixels="true">
    						<Canvas.RenderTransform>
    							<TransformGroup>
    								<TransformGroup.Children>
    									<TransformCollection>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform X="9" Y="5"/>
    									</TransformCollection>
    								</TransformGroup.Children>
    							</TransformGroup>
    						</Canvas.RenderTransform>
    						<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
    						<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
    						<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
    					</Canvas>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="Foreground" Value="Blue">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="IsDragging" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    							<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    							<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="VerticalSliderRightThumbStyle" TargetType="{x:Type Thumb}">
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Height" Value="10"/>
    		<Setter Property="Width" Value="18"/>
    		<Setter Property="Foreground" Value="Gray"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Thumb}">
    					<Canvas SnapsToDevicePixels="true">
    						<Canvas.RenderTransform>
    							<TransformGroup>
    								<TransformGroup.Children>
    									<TransformCollection>
    										<RotateTransform Angle="-90"/>
    										<TranslateTransform X="9" Y="5"/>
    									</TransformCollection>
    								</TransformGroup.Children>
    							</TransformGroup>
    						</Canvas.RenderTransform>
    						<Path x:Name="Background" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackgroundInverted}"/>
    						<Path x:Name="InnerBorder" Data="{StaticResource SliderPointedThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
    						<Path x:Name="OuterBorder" Data="{StaticResource SliderPointedThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
    					</Canvas>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="Foreground" Value="Blue">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackgroundInverted}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="IsDragging" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackgroundInverted}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    							<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    							<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderPointedThumbDisabledGeometry}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="VerticalSliderThumbStyle" TargetType="{x:Type Thumb}">
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="Height" Value="11"/>
    		<Setter Property="Width" Value="22"/>
    		<Setter Property="Foreground" Value="Gray"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Thumb}">
    					<Canvas SnapsToDevicePixels="true">
    						<Canvas.RenderTransform>
    							<TransformGroup>
    								<TransformGroup.Children>
    									<TransformCollection>
    										<RotateTransform Angle="90"/>
    										<TranslateTransform X="11" Y="5.5"/>
    									</TransformCollection>
    								</TransformGroup.Children>
    							</TransformGroup>
    						</Canvas.RenderTransform>
    						<Path x:Name="Background" Data="{StaticResource SliderThumbOuterBorderGeometry}" Fill="{StaticResource VerticalSliderThumbNormalBackground}"/>
    						<Path x:Name="InnerBorder" Data="{StaticResource SliderThumbMiddleBorderGeometry}" Stroke="White" StrokeThickness="1"/>
    						<Path x:Name="OuterBorder" Data="{StaticResource SliderThumbOuterBorderGeometry}" Stroke="#FF929292" StrokeThickness="1"/>
    					</Canvas>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsMouseOver" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="Foreground" Value="Blue">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbHoverBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbHoverBorder}"/>
    						</Trigger>
    						<Trigger Property="IsDragging" Value="true">
    							<Setter Property="Fill" TargetName="Background" Value="{StaticResource VerticalSliderThumbPressedBackground}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="{StaticResource HorizontalSliderThumbPressedBorder}"/>
    						</Trigger>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Fill" TargetName="Background" Value="#FFF4F4F4"/>
    							<Setter Property="Stroke" TargetName="InnerBorder" Value="{x:Null}"/>
    							<Setter Property="Data" TargetName="OuterBorder" Value="{StaticResource SliderThumbDisabledGeometry}"/>
    							<Setter Property="Stroke" TargetName="OuterBorder" Value="#FFAEB1AF"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
    		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    		<Setter Property="Background" Value="Transparent"/>
    		<Setter Property="Foreground" Value="#FFC4C4C4"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type Slider}">
    					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    						<Grid>
    							<Grid.RowDefinitions>
    								<RowDefinition Height="Auto"/>
    								<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
    								<RowDefinition Height="Auto"/>
    							</Grid.RowDefinitions>
    							<TickBar x:Name="TopTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Top" Grid.Row="0" Visibility="Collapsed"/>
    							<TickBar x:Name="BottomTick" Fill="{TemplateBinding Foreground}" Height="4" Placement="Bottom" Grid.Row="2" Visibility="Collapsed"/>
    							<Border x:Name="TrackBackground" BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}" BorderThickness="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" CornerRadius="1" Height="4.0" Margin="5,0" Grid.Row="1" VerticalAlignment="center">
    								<Canvas Margin="-6,-1">
    									<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Height="4.0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden"/>
    								</Canvas>
    							</Border>
    							<Track x:Name="PART_Track" Grid.Row="1" OpacityMask="Black">
    								<Track.DecreaseRepeatButton>
    									<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{DynamicResource RepeatButtonStyle}" d:IsHidden="True"/>
    								</Track.DecreaseRepeatButton>
    								<Track.IncreaseRepeatButton>
    									<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}" HorizontalAlignment="Stretch" Width="Auto"/>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb x:Name="Thumb" Style="{StaticResource HorizontalSliderThumbStyle}" Background="#00FF0000" Foreground="#00808080"/>
    								</Track.Thumb>
    							</Track>
    							<Grid HorizontalAlignment="Right" Height="2.4" Margin="0,0,-92.2,-198" Grid.Row="2" VerticalAlignment="Bottom" Width="3.2"/>
    						</Grid>
    					</Border>
    					<ControlTemplate.Triggers>
    						<Trigger Property="TickPlacement" Value="TopLeft">
    							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    							<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderUpThumbStyle}"/>
    							<Setter Property="Margin" TargetName="TrackBackground" Value="5,2,5,0"/>
    						</Trigger>
    						<Trigger Property="TickPlacement" Value="BottomRight">
    							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    							<Setter Property="Style" TargetName="Thumb" Value="{StaticResource HorizontalSliderDownThumbStyle}"/>
    							<Setter Property="Margin" TargetName="TrackBackground" Value="5,0,5,2"/>
    						</Trigger>
    						<Trigger Property="TickPlacement" Value="Both">
    							<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    							<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    						</Trigger>
    						<Trigger Property="IsSelectionRangeEnabled" Value="true">
    							<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
    						</Trigger>
    						<Trigger Property="IsKeyboardFocused" Value="true">
    							<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Style.Triggers>
    			<Trigger Property="Orientation" Value="Vertical">
    				<Setter Property="Template">
    					<Setter.Value>
    						<ControlTemplate TargetType="{x:Type Slider}">
    							<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    								<Grid>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition Width="Auto"/>
    										<ColumnDefinition MinWidth="{TemplateBinding MinWidth}" Width="Auto"/>
    										<ColumnDefinition Width="Auto"/>
    									</Grid.ColumnDefinitions>
    									<TickBar x:Name="TopTick" Grid.Column="0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" Width="4"/>
    									<TickBar x:Name="BottomTick" Grid.Column="2" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" Width="4"/>
    									<Border x:Name="TrackBackground" BorderBrush="{StaticResource VerticalSliderTrackNormalBorder}" BorderThickness="1" Background="{StaticResource HorizontalSliderTrackNormalBackground}" Grid.Column="1" CornerRadius="1" HorizontalAlignment="center" Margin="0,5" Width="4.0">
    										<Canvas Margin="-1,-6">
    											<Rectangle x:Name="PART_SelectionRange" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" StrokeThickness="1.0" Visibility="Hidden" Width="4.0"/>
    										</Canvas>
    									</Border>
    									<Track x:Name="PART_Track" Grid.Column="1">
    										<Track.DecreaseRepeatButton>
    											<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
    										</Track.DecreaseRepeatButton>
    										<Track.IncreaseRepeatButton>
    											<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
    										</Track.IncreaseRepeatButton>
    										<Track.Thumb>
    											<Thumb x:Name="Thumb" Style="{StaticResource VerticalSliderThumbStyle}"/>
    										</Track.Thumb>
    									</Track>
    								</Grid>
    							</Border>
    							<ControlTemplate.Triggers>
    								<Trigger Property="TickPlacement" Value="TopLeft">
    									<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    									<Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderLeftThumbStyle}"/>
    									<Setter Property="Margin" TargetName="TrackBackground" Value="2,5,0,5"/>
    								</Trigger>
    								<Trigger Property="TickPlacement" Value="BottomRight">
    									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    									<Setter Property="Style" TargetName="Thumb" Value="{StaticResource VerticalSliderRightThumbStyle}"/>
    									<Setter Property="Margin" TargetName="TrackBackground" Value="0,5,2,5"/>
    								</Trigger>
    								<Trigger Property="TickPlacement" Value="Both">
    									<Setter Property="Visibility" TargetName="TopTick" Value="Visible"/>
    									<Setter Property="Visibility" TargetName="BottomTick" Value="Visible"/>
    								</Trigger>
    								<Trigger Property="IsSelectionRangeEnabled" Value="true">
    									<Setter Property="Visibility" TargetName="PART_SelectionRange" Value="Visible"/>
    								</Trigger>
    								<Trigger Property="IsKeyboardFocused" Value="true">
    									<Setter Property="Foreground" TargetName="Thumb" Value="Blue"/>
    								</Trigger>
    							</ControlTemplate.Triggers>
    						</ControlTemplate>
    					</Setter.Value>
    				</Setter>
    			</Trigger>
    		</Style.Triggers>
    	</Style>
    	<Style x:Key="RepeatButtonStyle" TargetType="{x:Type RepeatButton}">
    		<Setter Property="OverridesDefaultStyle" Value="true"/>
    		<Setter Property="IsTabStop" Value="false"/>
    		<Setter Property="Focusable" Value="false"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type RepeatButton}">
    					<Rectangle VerticalAlignment="Center" Height="3" Fill="Red" Margin="6,0,0,0"/>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    	</Style>
    	<Style x:Key="PathStyle" TargetType="{x:Type Path}"/>
    	<Style x:Key="simpleTextStyle" TargetType="{x:Type TextBlock}">
    		<Setter Property="FontWeight" Value="DemiBold"/>
    		<Setter Property="Foreground" Value="White"/>
    		<Setter Property="FontSize" Value="13.333"/>
    	</Style>
    	<Style x:Key="TitleTextStyle" TargetType="{x:Type TextBlock}">
    		<Setter Property="FontSize" Value="32"/>
    	</Style>
        <Style x:Key="ButtonFocusVisual">
        	<Setter Property="Control.Template">
        		<Setter.Value>
        			<ControlTemplate>
        				<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
        <!-- *************************** Fin de Style **************************** -->



        <!-- *************************** DataTemplate **************************** -->
    	<DataTemplate x:Key="TemplateLibraryLstSongs">
    		<Grid>
    			<Grid HorizontalAlignment="Right" Height="15" VerticalAlignment="Bottom" Width="150">
    				<TextBlock TextWrapping="Wrap" Text="{Binding Name}"/>
    			</Grid>
    		</Grid>
    	</DataTemplate>
    	<DataTemplate x:Key="LibraryListBoxItemTemplate">
            <Grid Height="142.667" Width="450">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.307*"/>
                    <ColumnDefinition Width="0.693*"/>
                </Grid.ColumnDefinitions>
                <Image Margin="8" Source="20-03-2013 18-17-01.png" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"/>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.25*"/>
                        <RowDefinition Height="0.25*"/>
                        <RowDefinition Height="0.25*"/>
                        <RowDefinition Height="0.25*"/>
                    </Grid.RowDefinitions>
                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Nom :" Width="106.517" Height="20" VerticalAlignment="Stretch" FontSize="13.333" Foreground="White" Margin="16.333,8,0,7.667"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding Name}" Width="189" Height="20" VerticalAlignment="Center" Foreground="#FFD0D0D0"/>
                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Extension :" Width="106.517" Height="20" VerticalAlignment="Stretch" FontSize="13.333" Foreground="White" Margin="16.333,8,0,7.501" Grid.Row="1"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding Extension}" Width="189" Height="20" VerticalAlignment="Stretch" Foreground="#FFD0D0D0" Margin="0,8,0,7.667" Grid.Row="1"/>
                </Grid>
            </Grid>
        </DataTemplate>
		<DataTemplate x:Key="PictureLibraryListBoxItemTemplate">
            <Grid Height="142.667" Width="450">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.307*"/>
                    <ColumnDefinition Width="0.693*"/>
                </Grid.ColumnDefinitions>
                <Image Margin="8" Source="{Binding PathOfFile}" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto"/>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.25*"/>
                        <RowDefinition Height="0.25*"/>
                        <RowDefinition Height="0.25*"/>
                        <RowDefinition Height="0.25*"/>
                    </Grid.RowDefinitions>
                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Nom :" Width="106.517" Height="20" VerticalAlignment="Stretch" FontSize="13.333" Foreground="White" Margin="16.333,8,0,7.667"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding Name}" Width="189" Height="20" VerticalAlignment="Center" Foreground="#FFD0D0D0"/>
                    <TextBlock HorizontalAlignment="Left" TextWrapping="Wrap" Text="Extension :" Width="106.517" Height="20" VerticalAlignment="Stretch" FontSize="13.333" Foreground="White" Margin="16.333,8,0,7.501" Grid.Row="1"/>
                    <TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="{Binding Extension}" Width="189" Height="20" VerticalAlignment="Stretch" Foreground="#FFD0D0D0" Margin="0,8,0,7.667" Grid.Row="1"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="DataTemplateCurrentList">
    		<Grid>
                <local:TextBlockCustom x:Name="songCurrentListBlock" Height="20" Margin="0" Text="{Binding Mode=OneWay}" TextWrapping="NoWrap" VerticalAlignment="Stretch" Width="Auto"/>
            </Grid>
            <DataTemplate.Triggers>
                 <DataTrigger Binding="{Binding IsPlaying}" Value="True" >
                    <Setter TargetName="songCurrentListBlock" Property="Foreground" Value="Orange"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <DataTemplate x:Key="ListGenresItemTemplate">
            <Grid Width="193" Height="17">
                <Button Content="{Binding}" Template="{DynamicResource ListLibraryButtonTemplate}" Command="{Binding Path=DataContext.LoadGenreCMD, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ListArtistsItemTemplate">
            <Grid Width="193" Height="17">
                <Button Content="{Binding Name}" Template="{DynamicResource ListLibraryButtonTemplate}" Command="{Binding Path=DataContext.LoadArtistCMD, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="ListAlbumsItemTemplate">
            <Grid Width="193" Height="17">
                <Button Content="{Binding Name}" Template="{DynamicResource ListLibraryButtonTemplate}" Command="{Binding Path=DataContext.LoadAlbumCMD, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ItemsControl}}}" CommandParameter="{Binding}"/>
            </Grid>
        </DataTemplate>
       
        <!-- *********************** Fin de DataTemplate ************************* -->


        <!-- ************************** ControlTemplate ************************** -->
        <ControlTemplate x:Key="ButtonPlayTemplate" TargetType="{x:Type Button}">
    		<Border Margin="0" BorderThickness="1" CornerRadius="60" HorizontalAlignment="Center" Width="51.2" BorderBrush="White">
    			<Border.Background>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    					<GradientStop Color="Black" Offset="1"/>
    					<GradientStop Color="#FF888888"/>
    				</LinearGradientBrush>
    			</Border.Background>
    			<Image Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding PlayPauseButtonImage}"/>
    		</Border>
    	</ControlTemplate>
    	<ControlTemplate x:Key="ButtonNextTemplate" TargetType="{x:Type local:ButtonCustom}">
    		<Grid>
    			<Path Data="M-0.45545039,38.429617 L47.430296,19.156629 -0.36899272,-0.36016394" Margin="-0.455,-0.36,-0.445,-0.456" Stretch="Fill" Stroke="White" OpacityMask="{x:Null}">
    				<Path.Fill>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="1"/>
    						<GradientStop Color="#FF878787"/>
    					</LinearGradientBrush>
    				</Path.Fill>
    			</Path>
    			<Path Data="M-1.2720384,-0.7414544 C23.313166,19.275131 -1.2746635,39.218474 -1.2746635,39.218474" HorizontalAlignment="Left" Margin="-0.468,-0.469,0,-0.475" Stretch="Fill" Stroke="White" Width="11.928" Fill="Black">
    				<Path.OpacityMask>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="0"/>
    						<GradientStop Color="White" Offset="1"/>
    					</LinearGradientBrush>
    				</Path.OpacityMask>
    			</Path>
    			<TextBlock Margin="0" TextWrapping="Wrap" Text="&gt;&gt;" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Height="Auto" FontSize="16" TextAlignment="Left" FontFamily="Com" FontWeight="Thin">
    				<TextBlock.OpacityMask>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="0"/>
    						<GradientStop Color="#FFFA1111" Offset="1"/>
    					</LinearGradientBrush>
    				</TextBlock.OpacityMask>
    			</TextBlock>
    		</Grid>
    	</ControlTemplate>
    	<ControlTemplate x:Key="ButtonStopTemplate" TargetType="{x:Type Button}">
    		<Grid>
				<Rectangle Height="15.466" Margin="0" Stroke="White" VerticalAlignment="Center" RadiusX="1" RadiusY="1" HorizontalAlignment="Center" Width="15.466">
    				<Rectangle.Fill>
    					<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="1"/>
    						<GradientStop Color="#FF888888"/>
    					</LinearGradientBrush>
    				</Rectangle.Fill>
    			</Rectangle>
    		</Grid>
    	</ControlTemplate>
    	<ControlTemplate x:Key="ButtonRepeatlTemplate" TargetType="{x:Type Button}">
    		<Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Background="{x:Null}">
				<Image Margin="0" Source="{Binding RepeatButtonImage}" VerticalAlignment="Stretch" HorizontalAlignment="Left" MinWidth="10" MinHeight="10"/>
			</Grid>
    	</ControlTemplate>
    	<ControlTemplate x:Key="ButtonShuffleTemplate" TargetType="{x:Type Button}">
    		<Grid Background="{x:Null}" HorizontalAlignment="Stretch">
    			<Image Margin="0" Source="{Binding ShuffleButtonImage}"/>
    		</Grid>
    	</ControlTemplate>
    	<ControlTemplate x:Key="VideoListBoxTemplate" TargetType="{x:Type ListBox}">
    		<Grid/>
    	</ControlTemplate>
    	<ControlTemplate x:Key="ButtonPrevTemplate" TargetType="{x:Type local:ButtonCustom}">
    		<Grid>
    			<Path Data="M-0.45545039,38.429617 L47.430296,19.156629 -0.36899272,-0.36016394" Margin="-0.455,-0.36,-0.445,-0.456" Stretch="Fill" Stroke="White" OpacityMask="{x:Null}">
    				<Path.Fill>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="0"/>
    						<GradientStop Color="#FF878787" Offset="1"/>
    					</LinearGradientBrush>
    				</Path.Fill>
    			</Path>
    			<Path Data="M-1.2720384,-0.7414544 C23.313166,19.275131 -1.2746635,39.218474 -1.2746635,39.218474" HorizontalAlignment="Left" Margin="-0.468,-0.469,0,-0.475" Stretch="Fill" Stroke="White" Width="11.928" Fill="Black">
    				<Path.OpacityMask>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="0"/>
    						<GradientStop Color="White" Offset="1"/>
    					</LinearGradientBrush>
    				</Path.OpacityMask>
    			</Path>
    			<TextBlock Margin="0" TextWrapping="Wrap" Text="&gt;&gt;" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="White" Height="Auto" FontSize="16" TextAlignment="Left" FontFamily="Com" FontWeight="Thin">
    				<TextBlock.OpacityMask>
    					<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    						<GradientStop Color="Black" Offset="0"/>
    						<GradientStop Color="#FFFA1111" Offset="1"/>
    					</LinearGradientBrush>
    				</TextBlock.OpacityMask>
    			</TextBlock>
    		</Grid>
    	</ControlTemplate>
        <ControlTemplate x:Key="ButtonMuteTemplate" TargetType="{x:Type Button}">
        	<Grid>
        		<Image Margin="0" Source="{Binding MuteButtonImage}" VerticalAlignment="Center" HorizontalAlignment="Center" Height="Auto" Width="Auto"/>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ButtonAllSelectionTemplate" TargetType="{x:Type Button}">
        	<Grid x:Name="grid" HorizontalAlignment="Stretch" Background="#00000000" Margin="0,0,0,1.5">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CommonStates">
        				<VisualState x:Name="MouseOver">
        					<Storyboard>
        						<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.HorizontalAlignment)" Storyboard.TargetName="textBlock">
        							<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static HorizontalAlignment.Left}"/>
        						</ObjectAnimationUsingKeyFrames>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
        							<EasingColorKeyFrame KeyTime="0" Value="#69BEBEBE"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#BA27CED2"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
        			<VisualStateGroup x:Name="FocusStates">
        				<VisualState x:Name="Unfocused"/>
        				<VisualState x:Name="Focused"/>
        			</VisualStateGroup>
        			<VisualStateGroup x:Name="ValidationStates">
        				<VisualState x:Name="Valid"/>
        				<VisualState x:Name="InvalidFocused"/>
        				<VisualState x:Name="InvalidUnfocused"/>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
                <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Content}" Style="{DynamicResource simpleTextStyle}" FontWeight="Normal" Margin="4,0,0,0" FontSize="12"/>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="LibraryButtonTemplate" TargetType="{x:Type Button}">
        	<Grid Margin="0,0,10,0">
        		<VisualStateManager.VisualStateGroups>
        			<VisualStateGroup x:Name="CommonStates">
        				<VisualState x:Name="Normal"/>
        				<VisualState x:Name="MouseOver">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF1FB6B3"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Pressed">
        					<Storyboard>
        						<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)" Storyboard.TargetName="textBlock">
        							<EasingColorKeyFrame KeyTime="0" Value="#FF020202"/>
        						</ColorAnimationUsingKeyFrames>
        					</Storyboard>
        				</VisualState>
        				<VisualState x:Name="Disabled"/>
        			</VisualStateGroup>
        		</VisualStateManager.VisualStateGroups>
                <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{TemplateBinding Content}" FontSize="21.333" Foreground="White" HorizontalAlignment="Stretch"  FontWeight="DemiBold"/>
        	</Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ActionButtonTemplate" TargetType="{x:Type Button}">
            <Grid x:Name="grid" Margin="3,0,-90,0">
                <Grid.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#4F3F3F3F" Offset="1"/>
                        <GradientStop/>
                    </LinearGradientBrush>
                </Grid.Background>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal"/>
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#4FFFFFFF"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="grid">
                                    <EasingColorKeyFrame KeyTime="0" Value="#AE3F3F3F"/>
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Disabled"/>
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" Foreground="White" Margin="8,0,0,0" FontWeight="DemiBold"/>
            </Grid>
        </ControlTemplate>
        <ControlTemplate x:Key="ListLibraryButtonTemplate" TargetType="{x:Type Button}">
            <Grid>
                <TextBlock TextWrapping="Wrap" Text="{TemplateBinding Content}" FontFamily="Segoe UI" Foreground="White"/>
            </Grid>
        </ControlTemplate>
        <!-- ********************** Fin de ControlTemplate *********************** -->


        <!-- **************************** Storyboard ***************************** -->
        <Storyboard x:Key="OnMouseLeave">
    		<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="currentListView">
    			<EasingThicknessKeyFrame KeyTime="0:0:1.5" Value="192,0,0,0"/>
    		</ThicknessAnimationUsingKeyFrames>
    	</Storyboard>
    	<Storyboard x:Key="OnMouseEnter">
    		<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="currentListView">
    			<EasingThicknessKeyFrame KeyTime="0:0:0.5" Value="0"/>
    		</ThicknessAnimationUsingKeyFrames>
    	</Storyboard>
        <!-- ************************ Fin de Storyboard ************************** -->

        <!-- ******************************* Misc ******************************** -->
        <BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <System:Double x:Key="DoubleSpeedRatio">1</System:Double>
        <!-- *************************** Fin de Misc ***************************** -->
	
	</Window.Resources>
	<Window.Triggers>
		<EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="gridCurrentList">
			<BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard" Storyboard="{StaticResource OnMouseLeave}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="gridCurrentList">
			<BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard" Storyboard="{StaticResource OnMouseEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="DragDrop.DragEnter" SourceName="gridCurrentList">
			<BeginStoryboard x:Name="OnMouseEnter_BeginStoryboard1" Storyboard="{StaticResource OnMouseEnter}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="DragDrop.DragLeave" SourceName="gridCurrentList">
			<BeginStoryboard x:Name="OnMouseLeave_BeginStoryboard1" Storyboard="{StaticResource OnMouseLeave}"/>
		</EventTrigger>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded" SourceName="gridCurrentList">
			<BeginStoryboard Storyboard="{StaticResource OnMouseLeave}"/>
		</EventTrigger>
    </Window.Triggers>
    
    <i:Interaction.Triggers>
        <local:EscapeKeyEventTrigger EventName="KeyDown">
            <i:InvokeCommandAction Command="{Binding FullScreenCommand, Source={StaticResource ViewModelDataSource}}"/>
        </local:EscapeKeyEventTrigger>
        <i:EventTrigger SourceName="WMPWindow" EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding InitCommand, Source={StaticResource ViewModelDataSource}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.InputBindings>
    	<KeyBinding Command="{Binding OpenDialogCommand, Source={StaticResource ViewModelDataSource}}"   Key="O" Modifiers="Control"/>
    </Window.InputBindings>


    <!-- ******************************************************** Main Grid ********************************************************* -->

    
    <Grid Margin="0">

        <!-- ************************************** MENU *************************************** -->
        
        <Menu Height="20" Margin="0" VerticalAlignment="Top">
            <MenuItem Header="File" Height="20" Width="50">
                <MenuItem Header="Open" Height="31" Width="170" Command="{Binding OpenDialogCommand, Source={StaticResource ViewModelDataSource}}"/>
                <MenuItem Header="Close" Height="31" Width="170" Command="{Binding CloseWindow, Source={StaticResource ViewModelDataSource}}" />
            </MenuItem>
            <MenuItem Header="Edit" Height="20" Width="50"/>
            <MenuItem Header="Library" Height="20" Width="50"  DataContext="{Binding Source={StaticResource ViewModelLibrary}}">
                <MenuItem Header="Import File" Height="31" Width="170" d:LayoutOverrides="Width" Command="{Binding ImportFileCMD}"/>
                <MenuItem Header="Import Directory" Height="31" Command="{Binding ImportDirectoryCMD}"/>
            </MenuItem>
        </Menu>

        <!-- ********************************** Fin de MENU ************************************ -->



        <!-- ********************************** TAB CONTROL ************************************ -->        
        
        <TabControl x:Name="tabControl" Margin="0,20,0,0">
            <TabControl.InputBindings>
        	    <KeyBinding Key="O" Modifiers="Control" Command="{Binding OpenDialogCommand}" />
            </TabControl.InputBindings>

            
            <!-- ************************* ITEM PLAYER ************************* -->

			<TabItem x:Name="tabPlayer" Header="Player" DataContext="{Binding Source={StaticResource ViewModelDataSource}}">
			<!--<TabItem x:Name="tabPlayer" Header="Player">-->
                <TabItem.Background>
            		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
            			<GradientStop Color="#FFF3F3F3" Offset="0"/>
            			<GradientStop Color="#FFEBEBEB"/>
            			<GradientStop Color="#FF587BB2" Offset="0.7"/>
            			<GradientStop Color="#FF587BB2" Offset="1"/>
            		</LinearGradientBrush>
            	</TabItem.Background>
				<Grid Margin="0">
					<Grid.Background>
						<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
							<GradientStop Color="Black" Offset="1"/>
							<GradientStop Color="#FF0058FF"/>
						</LinearGradientBrush>
					</Grid.Background>
					<Grid x:Name="gridMediaElement" Margin="0,0,0,74.84" d:LayoutOverrides="HorizontalAlignment" Background="#00000000" AllowDrop="True">
						<i:Interaction.Behaviors>
							<local:GridBehavior x:Name="GridBehavior"/>
						</i:Interaction.Behaviors>
                        <i:Interaction.Triggers>
                            <local:DoubleClickEventTrigger EventName="MouseDown">
                                <i:InvokeCommandAction Command="{Binding FullScreenCommand}"/>
                            </local:DoubleClickEventTrigger>
                        </i:Interaction.Triggers>
                        <Image Source="/Assets/music.png" Visibility="{Binding Video, ElementName=MediaElementBehavior}" d:LayoutOverrides="Width" HorizontalAlignment="Center" VerticalAlignment="Center"/>
						<local:MediaElementCustom IsMuted="{Binding Mute, Mode=TwoWay}" LoadedBehavior="Manual" UnloadedBehavior="Manual" x:Name="MediaPlayer" Source="{Binding CurrentSourceMedia}" Opacity="100000" d:IsHidden="True" >
							<i:Interaction.Behaviors>
								<local:MediaElementBehavior x:Name="MediaElementBehavior"/>
							</i:Interaction.Behaviors>
							<i:Interaction.Triggers>
								<i:EventTrigger SourceName="MediaPlayer" EventName="MediaOpened">
									<i:InvokeCommandAction Command="{Binding MediaOpenedCommand}"/>
								</i:EventTrigger>   
								<i:EventTrigger SourceName="MediaPlayer" EventName="MediaFailed">
									<i:InvokeCommandAction Command="{Binding MediaFailedCommand}"/>
								</i:EventTrigger>
								<i:EventTrigger SourceName="MediaPlayer" EventName="MediaEnded">
									<i:InvokeCommandAction Command="{Binding MediaEndedCommand}"/>
								</i:EventTrigger>
							</i:Interaction.Triggers>
							<local:MediaElementCustom.Style>
								<Style>
									<Style.Triggers>
										<DataTrigger Binding="{Binding PlayState}" Value="Play" >
											<Setter Property="local:MediaElementCustom.PlayCustom" Value="Play"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding PlayState}" Value="Pause" >
											<Setter Property="local:MediaElementCustom.PlayCustom" Value="Pause"/>
										</DataTrigger>
										<DataTrigger Binding="{Binding PlayState}" Value="Stop" >
											<Setter Property="local:MediaElementCustom.PlayCustom" Value="Stop"/>
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</local:MediaElementCustom.Style>
						</local:MediaElementCustom>
						<TextBlock x:Name="nameLabel" TextWrapping="Wrap" Width="146.7" Foreground="White" TextAlignment="Center" Text="{Binding CurrentSourceName}" Height="52.533" VerticalAlignment="Top" HorizontalAlignment="Left"/>
					</Grid>
					<local:GridCustom x:Name="gridControlAction" Height="70.84" VerticalAlignment="Bottom">
						<local:SpecialSlider x:Name="slider" Maximum="{Binding Maximum, ElementName=MediaElementBehavior}" Minimum="0.0" Background="{x:Null}" Foreground="{x:Null}" IsMoveToPointEnabled="True" Value="{Binding Position, ElementName=MediaElementBehavior, Mode=TwoWay}" Height="23.8" VerticalAlignment="Top" Style="{DynamicResource SpecialSliderStyle}"/>
						<WrapPanel Margin="0,23.8,0,6" VerticalAlignment="Center" HorizontalAlignment="Center" Height="39.84">
							<!--<local:ButtonCustom x:Name="test" Content="test" Width="61" Margin="95,0,337,0" />-->
					<!--<local:ButtonCustom x:Name="test" Content="test" Width="61" Margin="95,0,337,0" />-->
							<TextBlock x:Name="timeBlock" Height="16.241" Margin="0" TextWrapping="Wrap" Width="52.666" TextAlignment="Center" Foreground="White" Text="{Binding Time, ElementName=MediaElementBehavior}"/>
							<Button x:Name="shuffleButton" Content="Button" Width="39.04" Height="39.04" Template="{DynamicResource ButtonShuffleTemplate}" Command="{Binding ShuffleCommand}" Foreground="Red" Background="{x:Null}"/>
							<Button x:Name="repeatButton" Content="{Binding RepeatButtonText}" Command="{Binding RepeatCommand}" Width="39.04" Height="39.04" Template="{DynamicResource ButtonRepeatlTemplate}"/>
							<Button x:Name="stopButton" Command="{Binding StopRequest}" d:LayoutOverrides="HorizontalAlignment" Height="38.973" Width="36.467" Template="{DynamicResource ButtonStopTemplate}">
								<Button.Background>
									<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
										<GradientStop Color="#FFF3F3F3" Offset="1"/>
										<GradientStop Color="#FFEBEBEB" Offset="1"/>
										<GradientStop Color="#FF888888"/>
									</LinearGradientBrush>
								</Button.Background>
							</Button>
							<local:ButtonCustom x:Name="prevButton" Content="&lt;&lt;" Margin="0" Width="47.986" Template="{DynamicResource ButtonPrevTemplate}" Height="39.04" VerticalAlignment="Center" HorizontalAlignment="Center" RenderTransformOrigin="0.5,0.5">
								<local:ButtonCustom.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform Angle="180"/>
										<TranslateTransform/>
									</TransformGroup>
								</local:ButtonCustom.RenderTransform>
							</local:ButtonCustom>
							<Button x:Name="buttonPlay" Content="{Binding PlayPauseButtonText}" Command="{Binding PlayRequest}" Template="{DynamicResource ButtonPlayTemplate}" BorderBrush="{x:Null}" Foreground="White" Width="51.646" Height="39.733" VerticalAlignment="Center" HorizontalAlignment="Center"/>
							<local:ButtonCustom x:Name="nextButton" Content="&gt;&gt;" Width="47.986" Visibility="Visible" Template="{DynamicResource ButtonNextTemplate}" Height="39.04" HorizontalAlignment="Center" VerticalAlignment="Center">
								<local:ButtonCustom.Background>
									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
										<GradientStop Color="#FFF3F3F3" Offset="0"/>
										<GradientStop Color="#FFEBEBEB" Offset="0.5"/>
										<GradientStop Color="#FFDDDDDD" Offset="0.5"/>
										<GradientStop Color="#FFCDCDCD" Offset="1"/>
									</LinearGradientBrush>
								</local:ButtonCustom.Background>
							</local:ButtonCustom>
							<Rectangle Height="39.04" Width="11.44"/>
							<Button x:Name="muteButton" Content="Mute" Height="39.04" Width="34.4" Command="{Binding MuteCommand}" Template="{DynamicResource ButtonMuteTemplate}" Margin="0"/>
							<local:SpecialSlider x:Name="volumeSlider" Width="99.267" Minimum="0" Maximum="1" Value="{Binding Volume, ElementName=MediaElementBehavior, Mode=TwoWay}" IsMoveToPointEnabled="True" Height="22.241" VerticalAlignment="Center" HorizontalAlignment="Center" Style="{DynamicResource SpecialSliderStyle}"/>
							<Button x:Name="openButton" Width="24.533" Command="{Binding OpenDialogCommand}" Height="39.04" Visibility="Hidden" d:IsHidden="True"/>                           
						</WrapPanel>
					</local:GridCustom>
					<Grid  AllowDrop="True" x:Name="gridCurrentList" Margin="0,0,0,70.84" HorizontalAlignment="Right" Width="191.8" Background="#00FF0000">
						<local:ListViewCustom x:Name="currentListView" ItemsSource="{Binding Collect}" Foreground="White" IsTabStop="True" Style="{DynamicResource ListViewCustomStyle}" Background="#C5000000" BorderThickness="5" BorderBrush="Black" ScrollViewer.HorizontalScrollBarVisibility="Disabled" VerticalContentAlignment="Center" UseLayoutRounding="True" Margin="0,0,-0.2,-0.3" SelectedIndex="5" ItemTemplate="{DynamicResource DataTemplateCurrentList}" d:LayoutOverrides="GridBox, HorizontalMargin" />
					</Grid>
				</Grid>

			</TabItem>

            <!-- ********************** Fin de ITEM PLAYER ********************* -->

            
            
            
            <!-- ************************* ITEM MUSIC ************************** -->
            
            <TabItem x:Name="tabMusic" Header="Music" DataContext="{Binding Source={StaticResource ViewModelLibrary}}" Height="22.96" Margin="-2,0,-2,-1" VerticalAlignment="Bottom">
            <!--<TabItem x:Name="tabMusic" Header="Music">-->
            	<TabItem.Background>
            		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
            			<GradientStop Color="#FFF3F3F3" Offset="0"/>
            			<GradientStop Color="#FF587BB2" Offset="0.7"/>
            			<GradientStop Color="#FF587BB2" Offset="1"/>
            		</LinearGradientBrush>
            	</TabItem.Background>
				<Grid x:Name="MusicMainGrid">
					<Grid.Background>
						<LinearGradientBrush EndPoint="0.5,1" MappingMode="RelativeToBoundingBox" StartPoint="0.5,0">
							<GradientStop Color="Black" Offset="1"/>
							<GradientStop Color="#FF0061FF"/>
							<GradientStop Color="#FF0062FF"/>
						</LinearGradientBrush>
					</Grid.Background>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="0.192*" MinWidth="70" />
						<ColumnDefinition Width="Auto" MinWidth="5.234" />
                        <ColumnDefinition Width="0.808*" MinWidth="600"/>
					</Grid.ColumnDefinitions>

                    <Button x:Name="playlistTitle" Command="{Binding ShowPlaylistsListCMD}" Content="Playlists" HorizontalAlignment="Left" Margin="15,42.52,0,0"  Width="119" VerticalAlignment="Top" Template="{DynamicResource LibraryButtonTemplate}"/>
                    
					<ListBox Visibility="{Binding Path=ShowPlaylistList,Converter={StaticResource booleanToVisibilityConverter}}" Margin="8,111,8,63" BorderThickness="0" Background="#39FFFFFF" ItemsSource="{Binding PlaylistsLIST}" SelectedItem="{Binding SelectedPlaylist}" Foreground="White" BorderBrush="#92328BC4">
                        <ListBox.ContextMenu>
                            <ContextMenu Name="contextMenuPlaylist" Background="White" BorderThickness="0" Foreground="#FF1F477C">
                                <MenuItem Header="Play" Command="{Binding PlayPlaylistCMD}"/>
                                <MenuItem Header="Rename" Command="{Binding RenamePlaylistCMD}"/>
                                <MenuItem Header="Delete" Command="{Binding DeletePlaylistCMD}"/>
                            </ContextMenu>
                        </ListBox.ContextMenu>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding LoadPlaylistCMD}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>


                    <GridSplitter Grid.Column="1" x:Name="SplitterCentre" Width="1" ResizeBehavior="PreviousAndNext"
						VerticalAlignment="Stretch" ShowsPreview="True" ResizeDirection="Columns" HorizontalAlignment="Center" Margin="0,31,0,0">
						<GridSplitter.Background>
							<RadialGradientBrush>
								<GradientStop Color="#7B717272" Offset="0"/>
								<GradientStop Offset="1"/>
							</RadialGradientBrush>
						</GridSplitter.Background>
					</GridSplitter>
                    
                    <Grid x:Name="RightGrid" Grid.Column="2">
                    	<Grid.RowDefinitions>
                            <RowDefinition Height="0.294*" MinHeight="100" />
                    		<RowDefinition Height="auto" MinHeight="3"/>
                            <RowDefinition Height="0.706*" MinHeight="200"/>
                    	</Grid.RowDefinitions>
                        <Grid Visibility="{Binding Path=ShowFilters,Converter={StaticResource booleanToVisibilityConverter}}" x:Name="ListsBoxes" Grid.Row="0" Margin="0,0,0,3.458">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.273*" MinWidth="80"/>
                                <ColumnDefinition Width="0.003*" MinWidth="5"/>
                                <ColumnDefinition Width="0.342*" MinWidth="80"/>
                                <ColumnDefinition Width="0.003*" MinWidth="5"/>
                                <ColumnDefinition Width="0.379*" MinWidth="80"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" Height="21.46" Margin="0,10,0,0" TextWrapping="Wrap" Text="Genre :" VerticalAlignment="Top" Width="262.883" HorizontalAlignment="Left" Style="{DynamicResource simpleTextStyle}"/>
                            <Button x:Name="btnAllGenres" Height="17.46" Margin="0,31.46,0,0" Content="{Binding AllGenresText}" VerticalAlignment="Top" Command="{Binding AllGenresCMD}" Template="{DynamicResource ButtonAllSelectionTemplate}" Background="{x:Null}"/>
                            <ListBox x:Name="lstGenre"  MinHeight="100" ItemsSource="{Binding GenresLIST}" SelectedItem="{Binding SelectedGenre}" Background="{x:Null}" BorderThickness="0" Foreground="White" Margin="0,48.92,0,0" ItemTemplate="{DynamicResource ListGenresItemTemplate}">
                    			<!--<i:Interaction.Triggers>
                    				<i:EventTrigger EventName="MouseDoubleClick">
                    					<i:InvokeCommandAction Command="{Binding LoadGenreCMD}"/>
                    				</i:EventTrigger>
                    			</i:Interaction.Triggers>-->
                    		</ListBox>

                            <GridSplitter Grid.Column="1" x:Name="SplitterListsLeft" Width="1" ResizeBehavior="PreviousAndNext"
						                  VerticalAlignment="Stretch" ShowsPreview="True" ResizeDirection="Columns" HorizontalAlignment="Center">
                                <GridSplitter.Background>
                                	<RadialGradientBrush>
                                		<GradientStop Color="#FF717272" Offset="0.091"/>
                                		<GradientStop Offset="1"/>
                                	</RadialGradientBrush>
                                </GridSplitter.Background>
                            </GridSplitter>

                            <TextBlock Grid.Column="2" Height="21.46" Margin="1,10,1,0" TextWrapping="Wrap" Text="Artist :" VerticalAlignment="Top" Style="{DynamicResource simpleTextStyle}" />
                            <ListBox Grid.Column="2" x:Name="lstArtist" MinHeight="100"  ItemsSource="{Binding ArtistsLIST}" SelectedItem="{Binding SelectedArtist}" Background="{x:Null}" BorderThickness="0" Foreground="White" Margin="0,48.92,0,0" ItemTemplate="{DynamicResource ListArtistsItemTemplate}">
                    			<i:Interaction.Triggers>
                    				<i:EventTrigger EventName="MouseDoubleClick">
                    					<i:InvokeCommandAction Command="{Binding LoadArtistCMD}"/>
                    				</i:EventTrigger>
                    			</i:Interaction.Triggers>
                    		</ListBox>


                            <GridSplitter Grid.Column="3" x:Name="SplitterListsRight" Width="1" ResizeBehavior="PreviousAndNext"
						                  VerticalAlignment="Stretch" ShowsPreview="True" ResizeDirection="Columns" HorizontalAlignment="Center">
                                <GridSplitter.Background>
                                	<RadialGradientBrush>
                                		<GradientStop Color="#FF717272" Offset="0.1"/>
                                		<GradientStop Offset="1"/>
                                	</RadialGradientBrush>
                                </GridSplitter.Background>
                            </GridSplitter>

                            <TextBlock Grid.Column="4" Height="21.46" Margin="0,10,-3,0" TextWrapping="Wrap" Text="Album :" VerticalAlignment="Top" Width="262.883" HorizontalAlignment="Left" Style="{DynamicResource simpleTextStyle}"  />
                            <ListBox Grid.Column="4" x:Name="lstAlbum" MinHeight="100"  ItemsSource="{Binding AlbumsLIST}" SelectedItem="{Binding SelectedAlbum}" Background="{x:Null}" BorderThickness="0" Foreground="White" Margin="0,48.92,0,0" ItemTemplate="{DynamicResource ListAlbumsItemTemplate}">
                    			<i:Interaction.Triggers>
                    				<i:EventTrigger EventName="MouseDoubleClick">
                    					<i:InvokeCommandAction Command="{Binding LoadAlbumCMD}"/>
                    				</i:EventTrigger>
                    			</i:Interaction.Triggers>
                    		</ListBox>
                            <Button x:Name="btnAllArtists" Command="{Binding AllArtistsCMD}" Content="{Binding AllArtistsText}" Grid.ColumnSpan="2" Height="17.46" Margin="0,31.46,0,0" VerticalAlignment="Top" Grid.Column="2" Template="{DynamicResource ButtonAllSelectionTemplate}" />
                            <Button x:Name="btnAllAlbums" Command="{Binding AllAlbumsCMD}" Content="{Binding AllAlbumsText}" Height="17.46" Margin="0,31.46,0,0" VerticalAlignment="Top" Grid.Column="4" Template="{DynamicResource ButtonAllSelectionTemplate}" />
                        </Grid>
                    	<GridSplitter Grid.Row="1" x:Name="SplitterLists"
                    		HorizontalAlignment="Stretch" ShowsPreview="True" d:LayoutOverrides="GridBox">
                    		<GridSplitter.Background>
                    			<RadialGradientBrush>
                    				<GradientStop Color="#7B717272" Offset="0"/>
                    				<GradientStop Offset="1"/>
                    			</RadialGradientBrush>
                    		</GridSplitter.Background>
                    	</GridSplitter>
                    	<ListView Grid.Row="2" x:Name="listViewSongs" ItemsSource="{Binding SongsLIST}" SelectedItem="{Binding SelectedSong}" d:LayoutOverrides="HorizontalAlignment" Margin="0,4,0,53.017" Background="{x:Null}" BorderBrush="#FF698ED0" BorderThickness="0" Foreground="#FFD4D4D6">
                    		<i:Interaction.Triggers>
                    			<i:EventTrigger EventName="MouseDoubleClick">
                                    <i:InvokeCommandAction Command="{Binding PlaySongItemCMD}" />
                    			</i:EventTrigger>
                    		</i:Interaction.Triggers>
                            <ListView.ContextMenu>
                                <ContextMenu Name="contextMenu" Background="White" BorderThickness="0" Foreground="#FF1F477C">
                                    <MenuItem Header="Add to Current List" Name="AddToCurrentList" ToolTip="Ajouter cette chanson à la liste de lecture en cours" Command="{Binding AddToCurrentListCMD}"/>
                                    <!--<MenuItem Header="Add to playlist" Name="AddToPlaylist" ToolTip="Ajouter cette chanson à une playlist" Command="{Binding RunAddPlaylistModeCMD}"/>-->
                                    <MenuItem Header="Add to playlist" Name="AddToPlaylist2" ItemsSource="{Binding PlaylistsMenuItemList, Source={StaticResource ViewModelLibrary}}">
                                        <MenuItem.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}" />
                                            </DataTemplate>
                                        </MenuItem.ItemTemplate>
                                        <MenuItem.ItemContainerStyle>
                                            <Style TargetType="MenuItem">
                                                <Setter Property="Command" Value="{Binding AddToPlaylistCMD, Source={StaticResource ViewModelLibrary}}" />
                                                <Setter Property="CommandParameter" Value="{Binding}" />
                                            </Style>
                                        </MenuItem.ItemContainerStyle>
                                    </MenuItem>
                                    <MenuItem Header="Open in Explorer" Name="OpenInexplorer" ToolTip="Ouvrir dans l'explorateur Windows" Command="{Binding OpenFileInExplorerCMD}"/>
                                    <MenuItem Header="Delete" Command="{Binding DeleteFileCMD}"/>

                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.View>
                    			<GridView>
                    				<GridViewColumn Width="30" Header="#" DisplayMemberBinding="{Binding Track}" />
                    				<GridViewColumn Width="200" Header="Title" DisplayMemberBinding="{Binding Title}"/>
                                    <GridViewColumn Width="50" Header="Time">
                                        <GridViewColumn.DisplayMemberBinding>
                                            <MultiBinding StringFormat="{}{0:D2}:{1:D2}">
                                                <Binding Path="Duration.Minutes" />
                                                <Binding Path="Duration.Seconds" />
                                            </MultiBinding>
                                        </GridViewColumn.DisplayMemberBinding>
                                    </GridViewColumn>
                                    <GridViewColumn Width="200" Header="Artist" DisplayMemberBinding="{Binding Artist.Name}"/>
                    				<GridViewColumn Width="200" Header="Album" DisplayMemberBinding="{Binding Album.Name}"/>
                    				<GridViewColumn Width="100" Header="Genre" DisplayMemberBinding="{Binding Genre}"/>
                    			</GridView>
                    		</ListView.View>
                    	</ListView>
                    	<TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" Text="MUSIC" VerticalAlignment="Bottom" Foreground="White" FontWeight="Bold" Grid.Row="2" Margin="0,0,8,3.237" Style="{DynamicResource TitleTextStyle}"/>
                    </Grid>
                    <Button x:Name="libraryTitle" Command="{Binding LoadLibraryCMD}" Content="Library" HorizontalAlignment="Left" Margin="15,8,61.595,0"  Width="119" VerticalAlignment="Top" Template="{DynamicResource LibraryButtonTemplate}" />
                    <Button Content="New Playlist" BorderThickness="0" Height="23.54" VerticalAlignment="Top" HorizontalAlignment="Left" Width="84" Margin="5,81,0,0" Template="{DynamicResource ActionButtonTemplate}" Command="{Binding AddPlaylistCMD}"/>
                    <!--<TextBlock x:Name="PlaylistName" Text="COUCOU LES AMIS" HorizontalAlignment="Left" TextWrapping="Wrap" Margin="89,64,0,502" Height="24" Grid.ColumnSpan="2" >
                    </TextBlock>-->
                </Grid>
			</TabItem>

            <!-- ********************** Fin de ITEM MUSIC ********************** -->


            
            
            <!-- ************************* ITEM VIDEO ************************** -->

            <TabItem x:Name="tabVideos" Header="Videos" DataContext="{Binding Source={StaticResource ViewModelLibrary}}">
            	<TabItem.Background>
            		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
            			<GradientStop Color="#FFF3F3F3" Offset="0"/>
            			<GradientStop Color="#FF587BB2" Offset="0.7"/>
            			<GradientStop Color="#FFDDDDDD"/>
            			<GradientStop Color="#FF587BB2" Offset="1"/>
            		</LinearGradientBrush>
            	</TabItem.Background>
            	<Grid x:Name="VideoMainGrid">
            		<Grid.Background>
            			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            				<GradientStop Color="Black" Offset="1"/>
            				<GradientStop Color="#FF045AE5"/>
            				<GradientStop Color="#FF0062FF"/>
            			</LinearGradientBrush>
            		</Grid.Background>
                    <ListBox x:Name="VideoList" BorderThickness="0" Margin="0,0,0,51.78" Background="{x:Null}"  ItemTemplate="{DynamicResource LibraryListBoxItemTemplate}" ItemsSource="{Binding VideosList}" SelectedItem="{Binding SelectedVideo}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding PlayVideoItemCMD}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                    <TextBlock x:Name="VideoTitle" HorizontalAlignment="Right" TextWrapping="Wrap" Text="VIDEOS" VerticalAlignment="Bottom" Foreground="White" Margin="0,0,8,6" FontWeight="Bold" Style="{DynamicResource TitleTextStyle}"/>
            	</Grid>                
            </TabItem>

            <!-- ********************** Fin de ITEM VIDEO ********************** -->
            
            
            

            <!-- ************************ ITEM PICTURE ************************* -->

            <TabItem x:Name="tabPictures" Header="Pictures" DataContext="{Binding Source={StaticResource ViewModelLibrary}}">
            	<TabItem.Background>
            		<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
            			<GradientStop Color="#FFF3F3F3" Offset="0"/>
            			<GradientStop Color="#FF587BB2" Offset="0.7"/>
            			<GradientStop Color="#FFDDDDDD"/>
            			<GradientStop Color="#FF587BB2" Offset="1"/>
            		</LinearGradientBrush>
            	</TabItem.Background>
            	<Grid x:Name="PictureMainGrid">
            		<Grid.Background>
            			<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
            				<GradientStop Color="Black" Offset="1"/>
            				<GradientStop Color="#FF045AE5"/>
            				<GradientStop Color="#FF0062FF"/>
            			</LinearGradientBrush>
            		</Grid.Background>
                    <ListBox x:Name="PictureList" BorderThickness="0" Margin="0,0,0,55.78" Background="{x:Null}" ItemTemplate="{DynamicResource PictureLibraryListBoxItemTemplate}" ItemsSource="{Binding PicturesList}"  SelectedItem="{Binding SelectedPicture}" HorizontalAlignment="Stretch">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding PlayPictureItemCMD}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ListBox>
                    <TextBlock x:Name="PictureTitle" HorizontalAlignment="Right" TextWrapping="Wrap" Text="PICTURES" VerticalAlignment="Bottom" Foreground="White" Margin="0,0,8,6" FontWeight="Bold" Style="{DynamicResource TitleTextStyle}" />
            	</Grid>
            </TabItem>

            <!-- ********************* Fin de ITEM PICTURE ********************* -->
        
        </TabControl>

        <!-- ******************************* Fin de TAB CONTROL ******************************** -->

    </Grid>


    <!-- **************************************************** Fin de Main Grid ****************************************************** -->
</Window>